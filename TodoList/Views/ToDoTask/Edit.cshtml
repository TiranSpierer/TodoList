@using ToDoList.Core.DataModels;
@model ToDoList.Core.DataModels.ToDoTask
@{
    ViewData["Title"] = "Edit";
}

<h2>Edit</h2>

<form asp-action="Edit">
    <input type="hidden" asp-for="Id" />
    <div class="form-group">
        <label asp-for="Title" class="control-label">Title</label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description" class="control-label">Description</label>
        <textarea asp-for="Description" class="form-control"></textarea>
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="DueDate" class="control-label">Due Date</label>
        <input asp-for="DueDate" class="form-control" />
        <span asp-validation-for="DueDate" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Priority" class="control-label">Priority</label>
        <select asp-for="Priority" class="form-control" asp-items="Html.GetEnumSelectList<ToDoTaskPriority>()"></select>
        <span asp-validation-for="Priority" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Status" class="control-label">Status</label>
        <select asp-for="Status" class="form-control" asp-items="Html.GetEnumSelectList<ToDoTaskStatus>()"></select>
        <span asp-validation-for="Status" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
